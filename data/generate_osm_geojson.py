#!/usr/bin/env python
'''Generates a GeoJSON file containing all the OSM features.

Input to this script is the "pass.tsv" file generated by osm_filter.py,
which looks like:

    osm_type<tab>osm_id<tab>wikipedia article<tab>name<tab>...
'''

import csv
import fileinput
import os
import json
import sys

from data import osm_filter
from data import fetch_metadata
from data import freebase
from data import osm
from data import osm_filter


def main(args):
    osm_fetcher = osm.OSM()
    fb = freebase.Freebase()
    features_out = []
    for line in fileinput.input():
        osm_type, osm_id, wiki_title, name = line.strip().split('\t')[:4]
        if wiki_title.startswith("en:"):
            wiki_title = wiki_title[3:]

        # GeoJSON data.
        path = os.path.join(osm_fetcher.cache_dir,
                '%s%s.xml.json' % (osm_type, osm_id))
        land_json = path.replace('.xml.json', '.land.xml.json')
        if os.path.exists(land_json):
            path = land_json
        try:
            d = json.load(file(path))
        except (ValueError, IOError):
            continue

        props = osm_filter.get_feature_props(d, osm_type, osm_id)
        if not props:
            continue
        freebase_data = fb._get_from_cache(wiki_title)
        assert(freebase_data)

        freebase_extract = fetch_metadata.extract_freebase_metadata(
                '', wiki_title, freebase_data)

        # TODO: assign id, override properties.
        d['id'] = '%s/%s' % (osm_type, osm_id)  # do better!
        props = {}
        props.update(fetch_metadata.extract_freebase_metadata(
            '', wiki_title, freebase_data))
        props.update({
            'description': '',
            'area_km2': '',
            'area_km2_source': 'calculated',
            'name': wiki_title
        })
        del props['area_km2']

        d['properties'] = props
        features_out.append(d)


    geojson_out = {
        'type': 'FeatureCollection',
        'features': features_out
    }
    print json.dumps(geojson_out, indent=2)


if __name__ == '__main__':
    main(sys.argv)
