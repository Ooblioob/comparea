I'm using http://www.jasondavies.com/maps/countries-by-area/ as a starting
point for projecting shape data using D3.

TopoJSON is similar to GeoJSON, but dramatically more compact.
Perhaps if I use TopoJSON, I could get away with not having a database!


This returns a list of GeoJSON objects:
topojson.feature(world, world.objects.countries).features

ogr commands
------------
List layers in a shapefile:
ogrinfo -so foo.shp

List fields in a shapefile layer:
ogrinfo -so foo.shp ne_50m_admin_0_countries_lakes

Drop the '-so' to see individual records.

Interesting fields in ne_50m_admin_0:
  pop_est (=313973000.000000)
  gdp_md_est (=15094000.000000)
  su_a3 (="USA")
  type (="Country")
  admin (="United States of America")
  name (="United States")


Path forward:
- UI
  - Inline the <option> arrays
  - Click+drag on background should pan both shapes
  - Touch: two finger both zooms and drags one of the shapes
  - Shapes jump on first click after change
  - Add share links
  - Add transitions
  - Be smarter about layout
  - Plug in Chosen for the dropdown lists
  x Support window resize
  x Show KP-like panels in the UI.

- Build a Flask server which accepts GeoJSON uploads and serves them.
  - /upload
  x /shape

- Data curation:
  - Improve quality of descriptions.
      use freebase: http://www.freebase.com/m/0h3y?any=%2Fcommon%2Ftopic
  - Get descriptions & wiki links for all provinces & continents
  - Find better continent shapes
  - Source areas from CIA factbook (and look at large differences)
  - Consider down-sampling some shapes?
  x Add ~10 new shapes like "United States (contiguous 48)"
  x Sort shapes by "solidity" (area / bbox area).
    --> should isolate oddities like France overseas & Hawaii
  x Add continent shapes
  x Determine which type of NE data I should use.
    -> does subunits contain the contiguous USA? (yes; but includes lakes)
  x Merge admin0, admin1 and {area, pop, description, wiki_link} attributes


x Figure out the best way to scale shapes
x Automatically place shapes side-by-side
x Last-clicked country comes to top
